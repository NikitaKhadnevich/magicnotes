{"version":3,"sources":["pages/mainNotes/listNotes/styled.js","pages/mainNotes/listNotes/ListNotesGrid/ListNoteStatus.jsx","pages/mainNotes/listNotes/ListNotes.jsx","pages/mainNotes/listNotes/ListNotesContainer.jsx"],"names":["GridMain","styled","Grid","appTheme","marginTop","ListActive","List","display","justifyContent","alignItems","minHeight","boxSizing","borderRadius","background","palette","primary","light","outline","dark","boxShadow","ListNoActive","main","NoteText","Box","flexDirection","width","margin","alignSelf","maxHeight","overflow","Title","Typography","textAlign","color","secondary","Description","NoteActions","Stack","BottonChange","position","zIndex","Container","ListNoteStatus","handleItem","noteList","noteItem","isActive","onClick","id","chooseNote","sx","padding","cursor","ListItem","variant","title","paddingTop","paddingBottom","sliceDescription","description","style","date","defaultProps","ListNotes","handleSaveNote","handleDelete","index","direction","spacing","callToEditNote","isChange","currentState","isShared","noteId","ListNotesContainer","fetchNextPage","isFetching","noAddedNotes","ERROR_MESSAGES","useSelector","notesList","dispatch","useDispatch","useState","triggerElem","setElement","observConditions","IntersectionObserver","entries","isIntersecting","threshold","observer","useRef","useEffect","current","observe","unobserve","onDragEnd","result","destination","spredNotes","dndNote","Array","from","splice","source","reorderedItem","SET_NOTES_LIST","droppableId","provided","className","container","droppableProps","ref","innerRef","map","draggableId","item","xs","sm","md","draggableProps","dragHandleProps","placeholder"],"mappings":"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","file":"static/js/6.43a22470.chunk.js","sourcesContent":["import { styled } from '@mui/styles';\nimport { Typography, Grid, Box, Container } from '@material-ui/core';\nimport List from '@mui/material/List';\nimport Stack from '@mui/material/Stack';\nimport appTheme from '../../../globalStyles';\n\nconst GridMain = styled(\n  Grid,\n  appTheme\n)({\n  marginTop: '15px !important',\n});\nexport default GridMain;\n\nexport const ListActive = styled(\n  List,\n  appTheme\n)({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  minHeight: 'fit-content',\n  boxSizing: 'border-box',\n  borderRadius: '7px',\n  background: appTheme.palette.primary.light,\n  outline: `2px solid ${appTheme.palette.primary.dark}`,\n  boxShadow: `0px 0px 10px 6px ${appTheme.palette.primary.dark}`,\n});\n\nexport const ListNoActive = styled(\n  List,\n  appTheme\n)({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  minHeight: 'fit-content',\n  boxSizing: 'border-box',\n  borderRadius: '7px',\n  background: appTheme.palette.primary.main,\n  outline: `2px solid ${appTheme.palette.primary.main}`,\n  boxShadow: `0px 0px 15px 3px ${appTheme.palette.primary.main}`,\n});\n\nexport const NoteText = styled(\n  Box,\n  appTheme\n)({\n  display: 'flex !important',\n  flexDirection: 'column',\n  width: '100% !important',\n  margin: '0 !important',\n  alignSelf: 'center !important',\n  maxHeight: 'fit-content !importnat',\n  overflow: 'auto',\n  boxShadow: 'none',\n  outline: 'none',\n  background: `${appTheme.palette.primary.main} !important`,\n});\n\nexport const Title = styled(\n  Typography,\n  appTheme\n)({\n  display: 'flex',\n  justifyContent: 'center',\n  width: '100%',\n  margin: '0',\n  textAlign: 'center',\n  color: `${appTheme.palette.secondary.main} !important`,\n});\n\nexport const Description = styled(\n  Typography,\n  appTheme\n)({\n  maxHeight: 'auto',\n  overflow: 'hidden !important',\n  display: 'block !important',\n  color: `${appTheme.palette.primary.dark} !important`,\n});\n\nexport const NoteActions = styled(\n  Stack,\n  appTheme\n)({\n  width: '100%',\n  maxHeight: 'fit-content',\n  margin: 0,\n  marginTop: '5px',\n  background: appTheme.palette.primary.light,\n  display: 'flex',\n});\n\nexport const BottonChange = styled(\n  Box,\n  appTheme\n)({\n  display: 'block',\n  minHeight: '40px !important',\n  justifyContent: 'start',\n  position: 'static',\n  margin: '0',\n  width: 'fit-content',\n  boxShadow: 'none',\n  borderRadius: '0px',\n  outline: 'none !important',\n  zIndex: '0',\n  textAlign: 'start',\n  background: 'none',\n});\n\nexport const NoAddedNotes = styled(\n  Container,\n  appTheme\n)({\n  position: 'relative',\n  minHeight: '100vh',\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\nimport ListItem from '@mui/material/ListItem';\n\nimport {\n  ListActive,\n  ListNoActive,\n  NoteText,\n  Title,\n  Description,\n} from '../styled';\n\nimport { chooseNote, sliceDescription } from '../ListNotesReceiver';\n\nconst ListNoteStatus = ({ handleItem, noteList, noteItem }) => (\n  <>\n    {noteItem.isActive ? (\n      <ListActive\n        onClick={() => handleItem(noteItem.id, noteList, chooseNote)}\n        sx={{ width: '100%', padding: '0px', cursor: 'pointer' }}\n        key={`${noteItem.id}_gridlist`}\n      >\n        <NoteText key={`${noteItem.id}_listbox`}>\n          <ListItem>\n            <Title variant='h6' id={noteItem.title}>\n              {noteItem.title}\n            </Title>\n          </ListItem>\n          <ListItem sx={{ paddingTop: '0', paddingBottom: '0' }}>\n            <Description variant='body2'>\n              {sliceDescription(noteItem.description)}\n            </Description>\n          </ListItem>\n          <ListItem>\n            <Typography\n              variant='subtitle2'\n              style={{ color: 'primary.main !important' }}\n            >\n              {noteItem.date}\n            </Typography>\n          </ListItem>\n        </NoteText>\n      </ListActive>\n    ) : (\n      <ListNoActive\n        onClick={() => handleItem(noteItem.id, noteList, chooseNote)}\n        sx={{ width: '100%', padding: '0px', cursor: 'pointer' }}\n        key={`${noteItem.id}gridlistNoActive`}\n      >\n        <NoteText key={`${noteItem.id}_listboxNoActive`}>\n          <ListItem>\n            <Title variant='h6' id={noteItem.title}>\n              {noteItem.title}\n            </Title>\n          </ListItem>\n          <ListItem sx={{ paddingTop: '0', paddingBottom: '0' }}>\n            <Description variant='body2'>\n              {sliceDescription(noteItem.description)}\n            </Description>\n          </ListItem>\n          <ListItem>\n            <Typography variant='subtitle2'>{noteItem.date}</Typography>\n          </ListItem>\n        </NoteText>\n      </ListNoActive>\n    )}\n  </>\n);\nexport default ListNoteStatus;\n\nListNoteStatus.propTypes = {\n  noteList: PropTypes.string,\n  noteItem: PropTypes.string,\n  handleItem: PropTypes.func,\n};\n\nListNoteStatus.defaultProps = {\n  noteList: 'noteList',\n  noteItem: 'noteItem',\n  handleItem: 'handleItem',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { NoteActions, BottonChange } from './styled';\nimport {\n  ButtonEdit,\n  ButtonShareContainer,\n  InputChange,\n  GetUsersContainer,\n  callToEditNote,\n} from './ListNotesReceiver';\nimport ListNoteStatus from './ListNotesGrid/ListNoteStatus';\n\nconst ListNotes = ({\n  handleItem,\n  handleSaveNote,\n  handleDelete,\n  noteList,\n  noteItem,\n  index,\n}) => (\n  <>\n    <ListNoteStatus\n      handleItem={handleItem}\n      noteList={noteList}\n      noteItem={noteItem}\n    />\n    <NoteActions\n      key={`${noteItem.id}_buttonStack`}\n      direction='row'\n      spacing={-3}\n      alignItems='flex-start'\n      justifyContent='flex-start'\n    >\n      <BottonChange key={`${noteItem.id}_buttonEdit`}>\n        <ButtonEdit\n          handleItem={handleItem}\n          callToEditNote={callToEditNote}\n          noteList={noteList}\n          id={noteItem.id}\n        />\n        <ButtonShareContainer\n          key={`${noteItem.id}_buttonUserShare`}\n          id={noteItem.id}\n        />\n      </BottonChange>\n      <InputChange\n        key={`${noteItem.id}_noteInput`}\n        handleSaveNote={handleSaveNote}\n        handleDelete={handleDelete}\n        isChange={noteItem.isChange}\n        description={noteItem.description}\n        id={noteItem.id}\n        index={index}\n        currentState={noteList}\n      />\n    </NoteActions>\n    {noteItem.isShared && <GetUsersContainer noteId={noteItem.id} />}\n  </>\n);\nexport default ListNotes;\n\nListNotes.propTypes = {\n  handleItem: PropTypes.func,\n  handleSaveNote: PropTypes.func,\n  handleDelete: PropTypes.func,\n  noteList: PropTypes.string,\n  noteItem: PropTypes.string,\n  index: PropTypes.number,\n};\n\nListNotes.defaultProps = {\n  handleItem: 'handleItem',\n  handleSaveNote: 'handleSaveNote',\n  handleDelete: 'handleDelete',\n  noteList: 'noteList',\n  noteItem: 'noteItem',\n  index: 'index',\n};\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable no-shadow */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Box } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport ListNotes from './ListNotes';\n\nimport GridMain from './styled';\nimport {\n  FormikAddNote,\n  ERROR_MESSAGES,\n  notesList,\n  NotesStatus,\n  NotesFetching,\n  SET_NOTES_LIST,\n} from './ListNotesReceiver';\n\nconst ListNotesContainer = ({\n  handleItem,\n  handleSaveNote,\n  handleDelete,\n  fetchNextPage,\n  isFetching,\n}) => {\n  const { noAddedNotes } = ERROR_MESSAGES;\n  const noteList = useSelector(notesList);\n  const dispatch = useDispatch();\n  const [triggerElem, setElement] = useState(null);\n  const observConditions = new IntersectionObserver(\n    (entries) => {\n      entries[0].isIntersecting && fetchNextPage();\n    },\n    { threshold: 1 }\n  );\n  const observer = useRef(observConditions);\n\n  const handleOnDragEnd = (result) => {\n    if (!result.destination) return;\n    const spredNotes = [...noteList];\n    const dndNote = Array.from(spredNotes);\n    const [reorderedItem] = dndNote.splice(result.source.index, 1);\n    dndNote.splice(result.destination.index, 0, reorderedItem);\n    dndNote && dispatch(SET_NOTES_LIST(dndNote));\n  };\n\n  useEffect(() => {\n    triggerElem && observer.current.observe(triggerElem);\n    return () => {\n      if (triggerElem) {\n        observer.current.unobserve(triggerElem);\n      }\n    };\n  }, [triggerElem]);\n\n  return (\n    <>\n      <FormikAddNote />\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        <Droppable droppableId='noteList'>\n          {(provided) => (\n            <GridMain\n              className='noteList'\n              container\n              spacing={2}\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {noteList ? (\n                noteList.map((noteItem, index) => (\n                  <Draggable\n                    key={noteItem.id}\n                    draggableId={noteItem.id}\n                    index={index}\n                  >\n                    {(provided) => (\n                      <Grid\n                        item\n                        xs={12}\n                        sm={6}\n                        md={4}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <ListNotes\n                          handleItem={handleItem}\n                          handleSaveNote={handleSaveNote}\n                          handleDelete={handleDelete}\n                          fetchNextPage={fetchNextPage}\n                          isFetching={isFetching}\n                          noteList={noteList}\n                          index={index}\n                          noteItem={noteItem}\n                        />\n                      </Grid>\n                    )}\n                  </Draggable>\n                ))\n              ) : (\n                <NotesStatus noAddedNotes={noAddedNotes} />\n              )}\n              {provided.placeholder}\n            </GridMain>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <Box ref={setElement}>\n        <NotesFetching isFetching={isFetching} />\n      </Box>\n    </>\n  );\n};\nexport default ListNotesContainer;\n\nListNotesContainer.propTypes = {\n  fetchNextPage: PropTypes.func,\n  handleItem: PropTypes.func,\n  handleSaveNote: PropTypes.func,\n  handleDelete: PropTypes.func,\n  isFetching: PropTypes.bool,\n};\n\nListNotesContainer.defaultProps = {\n  fetchNextPage: 'fetchNextPage',\n  handleItem: 'handleItem',\n  handleSaveNote: 'handleSaveNote',\n  handleDelete: 'handleDelete',\n  isFetching: 'isFetching',\n};\n"],"sourceRoot":""}