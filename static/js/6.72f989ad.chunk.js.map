{"version":3,"sources":["pages/mainNotes/listNotes/styled.js","components/notes/actionsButtons/ButtonEdit.jsx","components/notes/actionsButtons/ButtonShare.jsx","components/notes/actionsButtons/ButtonSave.jsx","components/notes/actionsButtons/ButonDelete.jsx","components/notes/styled.js","components/notes/InputChange.jsx","pages/mainNotes/listNotes/ListNotesCont.jsx"],"names":["GridMain","styled","Grid","appTheme","marginTop","ListActive","List","display","justifyContent","alignItems","minHeight","boxSizing","borderRadius","background","palette","primary","light","outline","dark","boxShadow","ListNoActive","main","NoteText","Box","flexDirection","width","margin","alignSelf","Title","Typography","textAlign","Description","maxHeight","overflow","color","NoteActions","Stack","NoAddedNotes","Container","position","ButtonEdit","id","handleItem","callToEditNote","noteList","IconButton","onClick","defaultProps","ButtonShare","handleShare","ButtonSave","handleSaveNote","updateDescription","direction","spacing","ButtonDelete","index","handleDelete","currentState","ChangeInputShow","height","marginLeft","ChangeInputHide","maxidth","TextAr","TextField","InputChange","isChange","description","useState","setDescription","sendDescription","e","Zoom","in","label","defaultValue","multiline","rows","variant","onChange","target","value","ListNotes","chooseNote","sliceDescription","noAddedNotes","ERROR_MESSAGES","container","length","map","item","xs","sm","md","isActive","sx","padding","cursor","ListItem","title","paddingTop","paddingBottom","date","component","align"],"mappings":"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","file":"static/js/6.72f989ad.chunk.js","sourcesContent":["import { styled } from '@mui/styles';\nimport { Typography, Grid, Box, Container } from '@material-ui/core';\nimport List from '@mui/material/List';\nimport Stack from '@mui/material/Stack';\nimport appTheme from '../../../globalStyles';\n\nconst GridMain = styled(\n  Grid,\n  appTheme\n)({\n  marginTop: '15px !important',\n});\nexport default GridMain;\n\nexport const ListActive = styled(\n  List,\n  appTheme\n)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 'fitContent',\n  boxSizing: 'border-box',\n  borderRadius: '7px',\n  background: appTheme.palette.primary.light,\n  outline: `2px solid ${appTheme.palette.primary.dark}`,\n  boxShadow: `0px 0px 10px 6px ${appTheme.palette.primary.dark}`,\n});\n\nexport const ListNoActive = styled(\n  List,\n  appTheme\n)({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  minHeight: '140px',\n  boxSizing: 'border-box',\n  borderRadius: '7px',\n  background: appTheme.palette.primary.main,\n  outline: `2px solid ${appTheme.palette.primary.main}`,\n  boxShadow: `0px 0px 15px 3px ${appTheme.palette.primary.main}`,\n});\n\nexport const NoteText = styled(\n  Box,\n  appTheme\n)({\n  display: 'flex',\n  flexDirection: 'column',\n  width: '100%',\n  margin: '0',\n  alignSelf: 'center',\n});\n\nexport const Title = styled(\n  Typography,\n  appTheme\n)({\n  display: 'flex',\n  justifyContent: 'center',\n  width: '100%',\n  margin: '0',\n  textAlign: 'center',\n});\n\nexport const Description = styled(\n  Typography,\n  appTheme\n)({\n  maxHeight: '20px',\n  overflow: 'hidden',\n  display: 'block',\n  color: appTheme.palette.primary.dark,\n});\n\nexport const NoteActions = styled(\n  Stack,\n  appTheme\n)({\n  width: '100%',\n  maxHeight: 'fitContent',\n  margin: 0,\n  marginTop: '5px',\n  background: appTheme.palette.primary.light,\n  display: 'flex',\n});\n\nexport const NoAddedNotes = styled(\n  Container,\n  appTheme\n)({\n  position: 'relative',\n  minHeight: '100vh',\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport IconButton from '@mui/material/IconButton';\n\nconst ButtonEdit = ({ id, handleItem, callToEditNote, noteList }) => (\n  <IconButton\n    aria-label='edit'\n    onClick={() => handleItem(id, noteList, callToEditNote)}\n  >\n    <ModeEditIcon />\n  </IconButton>\n);\nexport default ButtonEdit;\n\nButtonEdit.propTypes = {\n  handleItem: PropTypes.func,\n  callToEditNote: PropTypes.func,\n  noteList: PropTypes.string,\n  id: PropTypes.number,\n};\nButtonEdit.defaultProps = {\n  handleItem: 'handleItem',\n  callToEditNote: 'callToEditNote',\n  noteList: 'noteList',\n  id: 'id',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SendIcon from '@mui/icons-material/Send';\nimport IconButton from '@mui/material/IconButton';\n\nconst ButtonShare = ({ id, noteList, handleShare }) => (\n  <IconButton aria-label='edit' onClick={() => handleShare(id, noteList)}>\n    <SendIcon />\n  </IconButton>\n);\nexport default ButtonShare;\n\nButtonShare.propTypes = {\n  noteList: PropTypes.string,\n  id: PropTypes.number,\n  handleShare: PropTypes.func,\n};\nButtonShare.defaultProps = {\n  noteList: 'noteList',\n  id: 'id',\n  handleShare: 'handleShare',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport Stack from '@mui/material/Stack';\nimport SaveIcon from '@mui/icons-material/Save';\n\nconst ButtonSave = ({ id, handleSaveNote, updateDescription }) => (\n  <Stack direction='row' spacing={0.5} alignItems='center'>\n    <IconButton\n      id={id}\n      aria-label='save'\n      color='primary'\n      onClick={() => handleSaveNote(id, updateDescription)}\n    >\n      <SaveIcon />\n    </IconButton>\n  </Stack>\n);\n\nButtonSave.propTypes = {\n  handleSaveNote: PropTypes.func,\n  updateDescription: PropTypes.string,\n  id: PropTypes.number,\n};\nButtonSave.defaultProps = {\n  handleSaveNote: 'handleSaveNote',\n  updateDescription: 'updateDescription',\n  id: 'id',\n};\n\nexport default ButtonSave;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst ButtonDelete = ({ index, handleDelete, id, currentState }) => (\n  <Stack direction='row' spacing={0.5} alignItems='center'>\n    <IconButton\n      aria-label='delete'\n      color='primary'\n      onClick={() => handleDelete(index, currentState, id)}\n    >\n      <DeleteIcon />\n    </IconButton>\n  </Stack>\n);\n\nButtonDelete.propTypes = {\n  handleDelete: PropTypes.func,\n  index: PropTypes.number,\n  id: PropTypes.number,\n  currentState: PropTypes.string,\n};\n\nButtonDelete.defaultProps = {\n  handleDelete: 'handleDelete',\n  index: 'index',\n  id: 'id',\n  currentState: 'currentState',\n};\n\nexport default ButtonDelete;\n","import { styled } from '@mui/styles';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport appTheme from '../../globalStyles';\n\nconst ChangeInputShow = styled(\n  Box,\n  appTheme\n)({\n  height: '100%',\n  display: 'flex',\n  width: '100%',\n  justifyContent: 'space-between',\n  marginLeft: '-30px !important',\n});\nexport default ChangeInputShow;\n\nexport const ChangeInputHide = styled(\n  Box,\n  appTheme\n)({\n  display: 'flex',\n  maxidth: '0px !important',\n  maxHeight: '45px',\n});\n\nexport const TextAr = styled(\n  TextField,\n  appTheme\n)({\n  width: '100%',\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport { Zoom } from '@material-ui/core';\n\nimport ChangeInputShow, { ChangeInputHide, TextAr } from './styled';\n\nimport { ButtonSave, ButtonDelete } from './ButtonReciever';\n\nconst InputChange = ({\n  isChange,\n  description,\n  handleSaveNote,\n  id,\n  handleDelete,\n  index,\n  currentState,\n}) => {\n  const [updateDescription, setDescription] = useState(description);\n\n  const sendDescription = (e) => {\n    // eslint-disable-next-line no-unused-expressions\n    e !== updateDescription && e ? setDescription(e) : description;\n  };\n\n  return (\n    <Zoom in={isChange}>\n      {isChange ? (\n        <ChangeInputShow>\n          <TextAr\n            label='Note Description'\n            defaultValue={description}\n            multiline\n            rows={2}\n            variant='standard'\n            onChange={(e) => sendDescription(e.target.value)}\n          />\n          <Box>\n            <ButtonSave\n              updateDescription={updateDescription}\n              handleSaveNote={handleSaveNote}\n              id={id}\n            />\n            <ButtonDelete\n              handleDelete={handleDelete}\n              index={index}\n              id={id}\n              currentState={currentState}\n            />\n          </Box>\n        </ChangeInputShow>\n      ) : (\n        <ChangeInputHide>\n          <TextAr\n            label='Note Description'\n            defaultValue={description}\n            multiline\n            rows={2}\n            variant='standard'\n            onChange={(e) => sendDescription(e.target.value)}\n          />\n          <Box>\n            <ButtonSave\n              updateDescription={updateDescription}\n              handleSaveNote={handleSaveNote}\n              id={id}\n            />\n            <ButtonDelete\n              handleDelete={handleDelete}\n              index={index}\n              id={id}\n              currentState={currentState}\n            />\n          </Box>\n        </ChangeInputHide>\n      )}\n    </Zoom>\n  );\n};\n\nexport default InputChange;\n\nInputChange.propTypes = {\n  isChange: PropTypes.bool,\n  handleSaveNote: PropTypes.func,\n  description: PropTypes.string,\n  id: PropTypes.number,\n  index: PropTypes.number,\n  handleDelete: PropTypes.func,\n  currentState: PropTypes.string,\n};\n\nInputChange.defaultProps = {\n  isChange: 'isChange',\n  handleSaveNote: 'handleSaveNote',\n  description: 'description',\n  id: 'id',\n  index: 'index',\n  handleDelete: 'handleDelete',\n  currentState: 'currentState',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography, Grid, Box } from '@material-ui/core';\nimport ListItem from '@mui/material/ListItem';\n\nimport GridMain, {\n  ListActive,\n  ListNoActive,\n  NoteText,\n  Title,\n  Description,\n  NoteActions,\n  NoAddedNotes,\n} from './styled';\n\nimport {\n  ButtonEdit,\n  ButtonShare,\n  InputChange,\n  ERROR_MESSAGES,\n} from './ListNotesReciever';\n\nconst ListNotes = ({\n  handleItem,\n  handleShare,\n  handleSaveNote,\n  handleDelete,\n  chooseNote,\n  sliceDescription,\n  callToEditNote,\n  noteList,\n}) => {\n  const { noAddedNotes } = ERROR_MESSAGES;\n\n  return (\n    <GridMain container spacing={2}>\n      {noteList.length ? (\n        noteList.map((item, index) => (\n          <Grid item xs={12} sm={6} md={4}>\n            {item.isActive ? (\n              <ListActive\n                onClick={() => handleItem(item.id, noteList, chooseNote)}\n                sx={{ width: '100%', padding: '0px', cursor: 'pointer' }}\n                key={`${item.id}gridlist`}\n              >\n                <NoteText key={`${item.id}listbox`}>\n                  <ListItem>\n                    <Title variant='h6' id={item.title}>\n                      {item.title}\n                    </Title>\n                  </ListItem>\n\n                  <ListItem sx={{ paddingTop: '0', paddingBottom: '0' }}>\n                    <Description variant='body2'>\n                      {sliceDescription(item.description)}\n                    </Description>\n                  </ListItem>\n\n                  <ListItem>\n                    <Typography variant='subtitle2'>{item.date}</Typography>\n                  </ListItem>\n                </NoteText>\n              </ListActive>\n            ) : (\n              <ListNoActive\n                onClick={() => handleItem(item.id, noteList, chooseNote)}\n                sx={{ width: '100%', padding: '0px', cursor: 'pointer' }}\n                key={`${item.id}gridlist`}\n              >\n                <NoteText key={`${item.id}listbox`}>\n                  <ListItem>\n                    <Title variant='h6' id={item.title}>\n                      {item.title}\n                    </Title>\n                  </ListItem>\n\n                  <ListItem sx={{ paddingTop: '0', paddingBottom: '0' }}>\n                    <Description variant='body2'>\n                      {sliceDescription(item.description)}\n                    </Description>\n                  </ListItem>\n\n                  <ListItem>\n                    <Typography variant='subtitle2'>{item.date}</Typography>\n                  </ListItem>\n                </NoteText>\n              </ListNoActive>\n            )}\n\n            <NoteActions\n              key={`${item.id}buttonStack`}\n              direction='row'\n              spacing={-3}\n              alignItems='flex-start'\n              justifyContent='flex-start'\n            >\n              <Box key={`${item.id}edit`}>\n                <ButtonEdit\n                  handleItem={handleItem}\n                  callToEditNote={callToEditNote}\n                  noteList={noteList}\n                  id={item.id}\n                />\n                <ButtonShare\n                  handleShare={handleShare}\n                  noteList={noteList}\n                  id={item.id}\n                />\n              </Box>\n\n              <InputChange\n                key={`${item.id}input`}\n                handleSaveNote={handleSaveNote}\n                handleDelete={handleDelete}\n                isChange={item.isChange}\n                description={item.description}\n                id={item.id}\n                index={index}\n                currentState={noteList}\n              />\n            </NoteActions>\n          </Grid>\n        ))\n      ) : (\n        <NoAddedNotes>\n          <Typography component='h5' variant='h5' align='center'>\n            {noAddedNotes}\n          </Typography>\n        </NoAddedNotes>\n      )}\n    </GridMain>\n  );\n};\n\nListNotes.propTypes = {\n  noteList: PropTypes.string,\n  callToEditNote: PropTypes.func,\n  sliceDescription: PropTypes.func,\n  chooseNote: PropTypes.func,\n  handleItem: PropTypes.func,\n  handleShare: PropTypes.func,\n  handleSaveNote: PropTypes.func,\n  handleDelete: PropTypes.func,\n};\n\nListNotes.defaultProps = {\n  noteList: 'noteList',\n  callToEditNote: 'callToEditNote',\n  sliceDescription: 'sliceDescription',\n  chooseNote: 'chooseNote',\n  handleItem: 'handleItem',\n  handleShare: 'handleShare',\n  handleSaveNote: 'handleSaveNote',\n  handleDelete: 'handleDelete',\n};\n\nexport default ListNotes;\n"],"sourceRoot":""}